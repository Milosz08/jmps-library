/*
 * Copyright (c) 2023 by MULTIPLE AUTHORS
 *
 * File name: BufferedImageGeneratorPayload.java
 * Last modified: 28/03/2023, 23:14
 * Project name: jmps-library
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 *
 *     <http://www.apache.org/license/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the license.
 */

package org.jmpsl.gfx.generator;

import lombok.Builder;

import java.awt.Color;

import org.jmpsl.gfx.IBufferedImagePayload;
import org.jmpsl.file.hashcode.FileHashCodeGenerator;

/**
 * Simple POJO record storing image generator payload (sending from application). This class implements
 * {@link IBufferedImagePayload} interface and override methods (by lombok annotation). Fields:
 *
 * <ul>
 *     <li><code>size</code> - image width and height (square)</li>
 *     <li><code>fontSize</code> - image font size (avg for image size 200x200 is 85pt)</li>
 *     <li><code>initials</code> - user initials as char array (only accept 2 elements)</li>
 *     <li><code>id</code> - user id (from database)</li>
 *     <li><code>imageUniquePrefix</code> - user image prefix (avatar, banner etc.)</li>
 *     <li><code>userHashCode</code> - user hash code (generated by {@link FileHashCodeGenerator}, from database)</li>
 *     <li><code>preferredColor</code> - generated image background color (from database, only for re-regenerate)</li>
 * </ul>
 *
 * @author Mi≈Çosz Gilga
 * @since 1.0.2
 */
@Builder
public record BufferedImageGeneratorPayload(
    int size,int fontSize, char[] initials, Long id, String imageUniquePrefix, String userHashCode, Color preferredColor
) implements IBufferedImagePayload {

    @Override
    public String getImageUniquePrefix() {
        return imageUniquePrefix;
    }

    @Override
    public String getUserHashCode() {
        return userHashCode;
    }

    @Override
    public Long getId() {
        return id;
    }
}
